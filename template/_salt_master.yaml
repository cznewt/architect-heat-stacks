heat_template_version: 2013-05-23

description: Salt master fragment

parameters:

  public_net:
    type: string
  private_net:
    type: string

  security_group:
    type: string
  key_pair:
    type: string

  instance_flavor:
    type: string
  instance_image:
    type: string
  instance_zone:
    type: string

  reclass_address:
    type: string
  reclass_branch:
    type: string

  cfg01_name:
    type: string

resources:
  cfg01_wait_handle:
    type: OS::Heat::WaitConditionHandle
  cfg01_wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: cfg01_wait_handle}
      timeout: 300
  cfg01_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: { get_param: public_net }
  cfg01_floating_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: cfg01_floating_ip }
      server_id: { get_resource: cfg01_instance }
  cfg01_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net }
      fixed_ips:
        - ip_address: 172.16.10.100
      security_groups:
        - default
        - { get_param: security_group }
  cfg01_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: instance_image }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: key_pair }
      name: { get_param: cfg01_name }
      availability_zone: { get_param: instance_zone }
      networks:
      - port: { get_resource: cfg01_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Preparing base OS"
            which wget >/dev/null || (apt-get update; apt-get install -y wget)

            echo "deb [arch=amd64] http://apt.tcpcloud.eu/nightly/ trusty main security extra tcp tcp-salt" > /etc/apt/sources.list
            wget -O - http://apt.tcpcloud.eu/public.gpg | apt-key add -

            apt-get clean
            apt-get update

            echo "Configuring salt master ..."
            apt-get install -y salt-master reclass
            apt-get install -y salt-formula-linux salt-formula-reclass salt-formula-salt salt-formula-openssh salt-formula-ntp salt-formula-git salt-formula-graphite salt-formula-collectd salt-formula-sensu
            # Temporary until multi-site horizon is deployed on salt master
            apt-get install -y salt-formula-horizon salt-formula-nginx salt-formula-memcached salt-formula-python salt-formula-supervisor salt-formula-heka salt-formula-collectd salt-formula-sensu

            cat << 'EOF' >> /etc/salt/master.d/master.conf
            file_roots:
              base:
              - /usr/share/salt-formulas/env
            pillar_opts: False
            open_mode: True
            reclass: &reclass
              storage_type: yaml_fs
              inventory_base_uri: /srv/salt/reclass
            ext_pillar:
              - reclass: *reclass
            master_tops:
              reclass: *reclass
            EOF

            echo "Configuring reclass ..."
            git clone $reclass_address /srv/salt/reclass -b $reclass_branch
            mkdir -p /srv/salt/reclass/classes/service

            for i in /usr/share/salt-formulas/reclass/service/*; do
              ln -s $i /srv/salt/reclass/classes/service/
            done

            [ ! -d /etc/reclass ] && mkdir /etc/reclass
            cat << 'EOF' >> /etc/reclass/reclass-config.yml
            storage_type: yaml_fs
            pretty_print: True
            output: yaml
            inventory_base_uri: /srv/salt/reclass
            EOF

            echo "Configuring salt minion ..."
            apt-get install -y salt-minion
            [ ! -d /etc/salt/minion.d ] && mkdir -p /etc/salt/minion.d
            cat << "EOF" >> /etc/salt/minion.d/minion.conf
            id: $node_name
            master: localhost
            EOF

            echo "Restarting services ..."
            service salt-master restart
            rm -f /etc/salt/pki/minion/minion_master.pub
            service salt-minion restart

            echo "Showing system info and metadata ..."
            salt-call --no-color grains.items
            salt-call --no-color pillar.data

            echo "Running complete state ..."
            salt-call --no-color state.sls linux,openssh,salt.minion
            salt-call --no-color state.sls salt.master,reclass
            service salt-minion restart
            $wait_condition_notify --data-binary '{"status": "SUCCESS"}'

            reclass-salt --top
            salt-call --no-color state.highstate
          params:
            $node_name: { get_param: cfg01_name }
            $reclass_address: { get_param: reclass_address }
            $reclass_branch: { get_param: reclass_branch }
            $wait_condition_notify: { get_attr: [cfg01_wait_handle, curl_cli] }
            $config_host: localhost

outputs:
  config_host:
    value: { get_attr: [cfg01_instance, first_address] }
