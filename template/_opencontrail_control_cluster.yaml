heat_template_version: 2013-05-23

description: Opencontrail 3 controllers fragment

parameters:

  admin_net:
    type: string
  private_net:
    type: string
  security_group:
    type: string
  key_pair:
    type: string
  config_host:
    type: string

  cluster_vip_address:
    type: string
    default: 172.16.10.250

  instance_flavor:
    type: string
  instance_image:
    type: string
  instance_zone:
    type: string

  ntw01_name:
    type: string
  ntw02_name:
    type: string
  ntw03_name:
    type: string

resources:

  ntw01_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net }
      fixed_ips:
        - ip_address: 192.168.10.161
      security_groups:
        - default
        - { get_param: security_group }
  ntw01_admin_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: admin_net }
      fixed_ips:
        - ip_address: 172.16.10.161
      allowed_address_pairs:
        - ip_address: { get_param: cluster_vip_address }
      security_groups:
        - default
        - { get_param: security_group }
  ntw01_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: instance_image }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: key_pair }
      name: { get_param: ntw01_name }
      availability_zone: { get_param: instance_zone }
      networks:
      - port: { get_resource: ntw01_private_port }
      - port: { get_resource: ntw01_admin_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Preparing base OS ..."

            which wget >/dev/null || (apt-get update; apt-get install -y wget)

            echo "deb [arch=amd64] http://apt.tcpcloud.eu/nightly/ trusty main security extra tcp tcp-salt" > /etc/apt/sources.list
            wget -O - http://apt.tcpcloud.eu/public.gpg | apt-key add -

            echo "deb http://repo.saltstack.com/apt/ubuntu/14.04/amd64/2016.3 trusty main" > /etc/apt/sources.list.d/saltstack.list
            wget -O - https://repo.saltstack.com/apt/ubuntu/14.04/amd64/2016.3/SALTSTACK-GPG-KEY.pub | apt-key add -

            apt-get clean
            apt-get update
            apt-get install -y salt-minion

            echo "id: $node_name" >> /etc/salt/minion
            echo "master: $config_host" >> /etc/salt/minion
            rm -f /etc/salt/pki/minion/minion_master.pub
            service salt-minion restart
            echo "Showing node metadata..."
            salt-call --no-color pillar.data
            echo "Running complete state ..."
            salt-call --no-color state.sls linux,openssh,salt -l info
          params:
            $node_name: { get_param: ntw01_name }
            $config_host: { get_param: config_host }
  ntw02_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net }
      fixed_ips:
        - ip_address: 192.168.10.162
      security_groups:
        - default
        - { get_param: security_group }
  ntw02_admin_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: admin_net }
      fixed_ips:
        - ip_address: 172.16.10.162
      allowed_address_pairs:
        - ip_address: { get_param: cluster_vip_address }
      security_groups:
        - default
        - { get_param: security_group }
  ntw02_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: instance_image }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: key_pair }
      name: { get_param: ntw02_name }
      availability_zone: { get_param: instance_zone }
      networks:
      - port: { get_resource: ntw02_private_port }
      - port: { get_resource: ntw02_admin_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Preparing base OS ..."

            which wget >/dev/null || (apt-get update; apt-get install -y wget)

            echo "deb [arch=amd64] http://apt.tcpcloud.eu/nightly/ trusty main security extra tcp tcp-salt" > /etc/apt/sources.list
            wget -O - http://apt.tcpcloud.eu/public.gpg | apt-key add -

            echo "deb http://repo.saltstack.com/apt/ubuntu/14.04/amd64/2016.3 trusty main" > /etc/apt/sources.list.d/saltstack.list
            wget -O - https://repo.saltstack.com/apt/ubuntu/14.04/amd64/2016.3/SALTSTACK-GPG-KEY.pub | apt-key add -

            apt-get clean
            apt-get update
            apt-get install -y salt-minion

            echo "id: $node_name" >> /etc/salt/minion
            echo "master: $config_host" >> /etc/salt/minion
            rm -f /etc/salt/pki/minion/minion_master.pub
            service salt-minion restart
            echo "Showing node metadata..."
            salt-call --no-color pillar.data
            echo "Running complete state ..."
            salt-call --no-color state.sls linux,openssh,salt -l info
          params:
            $node_name: { get_param: ntw02_name }
            $config_host: { get_param: config_host }
  ntw03_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net }
      fixed_ips:
        - ip_address: 192.168.10.163
      security_groups:
        - default
        - { get_param: security_group }
  ntw03_admin_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: admin_net }
      fixed_ips:
        - ip_address: 172.16.10.163
      allowed_address_pairs:
        - ip_address: { get_param: cluster_vip_address }
      security_groups:
        - default
        - { get_param: security_group }
  ntw03_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: instance_image }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: key_pair }
      name: { get_param: ntw03_name }
      availability_zone: { get_param: instance_zone }
      networks:
      - port: { get_resource: ntw03_private_port }
      - port: { get_resource: ntw03_admin_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo "Preparing base OS ..."

            which wget >/dev/null || (apt-get update; apt-get install -y wget)

            echo "deb [arch=amd64] http://apt.tcpcloud.eu/nightly/ trusty main security extra tcp tcp-salt" > /etc/apt/sources.list
            wget -O - http://apt.tcpcloud.eu/public.gpg | apt-key add -

            echo "deb http://repo.saltstack.com/apt/ubuntu/14.04/amd64/2016.3 trusty main" > /etc/apt/sources.list.d/saltstack.list
            wget -O - https://repo.saltstack.com/apt/ubuntu/14.04/amd64/2016.3/SALTSTACK-GPG-KEY.pub | apt-key add -

            apt-get clean
            apt-get update
            apt-get install -y salt-minion

            echo "id: $node_name" >> /etc/salt/minion
            echo "master: $config_host" >> /etc/salt/minion
            rm -f /etc/salt/pki/minion/minion_master.pub
            service salt-minion restart
            echo "Showing node metadata..."
            salt-call --no-color pillar.data
            echo "Running complete state ..."
            salt-call --no-color state.sls linux,openssh,salt -l info
          params:
            $node_name: { get_param: ntw03_name }
            $config_host: { get_param: config_host }
